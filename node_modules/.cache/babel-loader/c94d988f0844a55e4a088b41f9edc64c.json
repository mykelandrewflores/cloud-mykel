{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Michael\\\\cloud-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\cloud-react\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todos, TodoForm } from './components/Todos';\n\nfunction App() {\n  const _useState = useState([{\n    text: \"lorem  ipsum1\",\n    isCompleted: false\n  }, {\n    text: \"lorem  ipsum2\",\n    isCompleted: false\n  }, {\n    text: \"lorem  ipsum3\",\n    isCompleted: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = text => {\n    console.log(text);\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = index => {\n    const newTodos = [...todos];\n    let isCompleted = newTodos[index].isCompleted;\n\n    if (!isCompleted) {\n      isCompleted = true;\n    } else {\n      isCompleted = false;\n    }\n\n    setTodos(newTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Reactors\"), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), todos.map((todo, index) => {\n    return React.createElement(Todos, {\n      key: index,\n      todo: todo,\n      index: index,\n      completeTodo: updateTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Michael/cloud-react/src/App.js"],"names":["React","useState","Todos","TodoForm","App","text","isCompleted","todos","setTodos","addTodo","console","log","newTodos","updateTodo","index","map","todo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,oBAAhC;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaH,QAAQ,CAAC,CACjC;AAAEI,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,WAAW,EAAE;AAAtC,GADiC,EAEjC;AAAED,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,WAAW,EAAE;AAAtC,GAFiC,EAGjC;AAAED,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,WAAW,EAAE;AAAtC,GAHiC,CAAD,CADrB;AAAA;AAAA,QACNC,KADM;AAAA,QACCC,QADD;;AAOb,QAAMC,OAAO,GAAGJ,IAAI,IAAI;AACtBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,UAAMO,QAAQ,GAAG,CAAC,GAAGL,KAAJ,EAAW;AAAEF,MAAAA;AAAF,KAAX,CAAjB;AACAG,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,UAAMF,QAAQ,GAAG,CAAC,GAAGL,KAAJ,CAAjB;AACA,QAAID,WAAW,GAAGM,QAAQ,CAACE,KAAD,CAAR,CAAgBR,WAAlC;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChBA,MAAAA,WAAW,GAAG,IAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAG,KAAd;AACD;;AACDE,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GATD;;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEH,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAC1B,WAAQ,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAmB,MAAA,IAAI,EAAEE,IAAzB;AAA+B,MAAA,KAAK,EAAEF,KAAtC;AAA6C,MAAA,YAAY,EAAED,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFA,CAHH,CADF,CADF;AAaD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\nimport { Todos, TodoForm } from './components/Todos';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\r\n    { text: \"lorem  ipsum1\", isCompleted: false },\r\n    { text: \"lorem  ipsum2\", isCompleted: false },\r\n    { text: \"lorem  ipsum3\", isCompleted: false },\r\n\r\n  ]);\r\n  const addTodo = text => {\r\n    console.log(text);\r\n    const newTodos = [...todos, { text }];\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  const updateTodo = index => {\r\n    const newTodos = [...todos];\r\n    let isCompleted = newTodos[index].isCompleted;\r\n    if (!isCompleted) {\r\n      isCompleted = true;\r\n    } else {\r\n      isCompleted = false;\r\n    }\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Reactors</h1>\r\n        <TodoForm addTodo={addTodo} />\r\n        {todos.map((todo, index) => {\r\n          return (<Todos key={index} todo={todo} index={index} completeTodo={updateTodo} />)\r\n        })}\r\n      </header>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
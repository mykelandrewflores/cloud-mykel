{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Michael\\\\cloud-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\cloud-react\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Avatar, AvatarForm } from './components/Todos';\nimport axios from 'axios';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        avatars = _useState2[0],\n        setAvatar = _useState2[1];\n\n  const addAvatar = id => {\n    axios.get('https://reqres.in/api/users/' + id).then(res => {\n      const newAvatar = [...avatars, {\n        user: res.data.data,\n        isError: false,\n        isLoading: false\n      }];\n      setAvatar(newAvatar);\n    });\n  };\n\n  const removeAvatar = index => {\n    const newAvatar = [...avatars];\n    console.log(avatars);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Reactors\"), React.createElement(AvatarForm, {\n    addAvatar: addAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), avatars.map((avatar, index) => React.createElement(Avatar, {\n    key: index,\n    avatar: avatar,\n    removeAvatar: removeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Michael/cloud-react/src/App.js"],"names":["React","useState","Avatar","AvatarForm","axios","App","avatars","setAvatar","addAvatar","id","get","then","res","newAvatar","user","data","isError","isLoading","removeAvatar","index","console","log","map","avatar"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACgBJ,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACNK,OADM;AAAA,QACGC,SADH;;AAGb,QAAMC,SAAS,GAAGC,EAAE,IAAI;AACtBL,IAAAA,KAAK,CAACM,GAAN,CAAU,iCAAiCD,EAA3C,EACGE,IADH,CACSC,GAAD,IAAS;AACb,YAAMC,SAAS,GAAG,CAAE,GAAGP,OAAL,EAAc;AAAEQ,QAAAA,IAAI,EAAEF,GAAG,CAACG,IAAJ,CAASA,IAAjB;AAAuBC,QAAAA,OAAO,EAAE,KAAhC;AAAuCC,QAAAA,SAAS,EAAE;AAAlD,OAAd,CAAlB;AACAV,MAAAA,SAAS,CAACM,SAAD,CAAT;AACD,KAJH;AAKD,GAND;;AAQA,QAAMK,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAMN,SAAS,GAAG,CAAC,GAAGP,OAAJ,CAAlB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,OAAO,CAACgB,GAAR,CAAY,CAACC,MAAD,EAASJ,KAAT,KAAoB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,MAAM,EAAEI,MAA5B;AAAqC,IAAA,YAAY,EAAEL,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAHH,CADF,CADF;AAWD;;AAED,eAAeb,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\nimport { Avatar, AvatarForm } from './components/Todos';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [avatars, setAvatar] = useState([]);\r\n\r\n  const addAvatar = id => {\r\n    axios.get('https://reqres.in/api/users/' + id)\r\n      .then((res) => {\r\n        const newAvatar = [ ...avatars, { user: res.data.data, isError: false, isLoading: false } ];\r\n        setAvatar(newAvatar);\r\n      });\r\n  }\r\n\r\n  const removeAvatar = index => {\r\n    const newAvatar = [...avatars];\r\n    console.log(avatars)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Reactors</h1>\r\n        <AvatarForm addAvatar={addAvatar} />\r\n        {avatars.map((avatar, index) => (<Avatar key={index} avatar={avatar}  removeAvatar={removeAvatar} />))}\r\n      </header>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}